{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","name","now","Date","toUTCString","slice","useState","time","setTime","prevClockName","setPrevClockName","useEffect","timer","window","setInterval","console","info","clearInterval","debug","className","App","showClock","setShowClock","clockName","setClockName","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","timerId","value","toString","getRandomName","removeEventListener","ReactDOM","render","getElementById"],"mappings":"oLAEaA,EAAoC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5CC,EAAM,kBAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IACvD,EAAwBC,mBAASJ,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA0CF,mBAASL,GAAnD,mBAAOQ,EAAP,KAAsBC,EAAtB,KAuBA,OArBAC,qBAAU,WACR,IAAMC,EAAQC,OAAOC,aAAY,WAC/BN,EAAQN,GAGRa,QAAQC,KAAKd,OACZ,KAEH,OAAO,WACLW,OAAOI,cAAcL,MAEtB,IAEHD,qBAAU,WACJF,IAAkBR,IAEpBc,QAAQG,MAAR,qBAA4BjB,IAC5BS,EAAiBT,MAElB,CAACA,IAGF,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiClB,IAEhC,YAED,sBAAMkB,UAAU,cAAhB,SAA+BZ,QCxB9B,IAAMa,EAAgB,WAC3B,MAAkCd,oBAAS,GAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KACA,EAAkChB,mBAAS,WAA3C,mBAAOiB,EAAP,KAAkBC,EAAlB,KAEMC,EAAmB,SAACC,GACxBA,EAAMC,iBACNL,GAAa,IAGTM,EAAkB,WACtBN,GAAa,IAmBf,OAhBAX,qBAAU,WACRkB,SAASC,iBAAiB,cAAeL,GACzCI,SAASC,iBAAiB,QAASF,GAEnC,IAAMG,EAAUlB,OAAOC,aAAY,WACjCU,EAxBN,WACE,IAAMQ,EAAQ7B,KAAKD,MAAM+B,WAAW5B,OAAO,GAE3C,MAAM,SAAN,OAAgB2B,GAqBCE,MACZ,MAEH,OAAO,WACLL,SAASM,oBAAoB,cAAeV,GAC5CI,SAASM,oBAAoB,QAASP,GAEtCf,OAAOI,cAAcc,MAEtB,IAGD,sBAAKZ,UAAU,MAAf,UACE,6CAECE,GAAa,cAAC,EAAD,CAAOpB,KAAMsB,QCxCjCa,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,U","file":"static/js/main.f1506fb0.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const Clock: React.FC<{ name: string }> = ({ name }) => {\n  const now = () => new Date().toUTCString().slice(-12, -4);\n  const [time, setTime] = useState(now);\n  const [prevClockName, setPrevClockName] = useState(name);\n\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n      setTime(now);\n\n      /* eslint-disable no-console */\n      console.info(now());\n    }, 1000);\n\n    return () => {\n      window.clearInterval(timer);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (prevClockName !== name) {\n      /* eslint-disable no-console */\n      console.debug(`Renamed to ${name}`);\n      setPrevClockName(name);\n    }\n  }, [name]);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">{name}</strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">{time}</span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [showClock, setShowClock] = useState(true);\n  const [clockName, setClockName] = useState('Clock-0');\n\n  const handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    setShowClock(false);\n  };\n\n  const handleLeftClick = () => {\n    setShowClock(true);\n  };\n\n  useEffect(() => {\n    document.addEventListener('contextmenu', handleRightClick);\n    document.addEventListener('click', handleLeftClick);\n\n    const timerId = window.setInterval(() => {\n      setClockName(getRandomName());\n    }, 3300);\n\n    return () => {\n      document.removeEventListener('contextmenu', handleRightClick);\n      document.removeEventListener('click', handleLeftClick);\n\n      window.clearInterval(timerId);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n\n      {showClock && <Clock name={clockName} />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}